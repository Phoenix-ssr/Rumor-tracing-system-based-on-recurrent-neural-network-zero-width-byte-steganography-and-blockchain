user = eth.getAccount[4]
user = eth.getAccount[0]
user = eth.account[0]
user = eth.accounts[0]
user = eth.accounts[4]
eth.getBalance(user)
user = eth.accounts[0]
eth.getBalance(user)
eth.sendTranaction({from:eth.accounts[4],to:eth.accounts[0],vale:web3.toWei(1000,"ether")})
eth.sendTransaction({from:eth.accounts[4],to:eth.accounts[0],vale:web3.toWei(1000,"ether")})
user = eth.accounts[0]
eth.sendTransaction({from:eth.accounts[4],to:eth.accounts[0],vale:web3.toWei(1000,"ether")})
user = eth.accounts[4]
eth.sendTransaction({from:eth.accounts[4],to:eth.accounts[0],vale:web3.toWei(1000,"ether")})
eth.getBalance(user)
user = eth.accounts[0]
eth.getBalance(user)
eth.sendTransaction({from:eth.accounts[4],to:eth.accounts[0],vale:web3.toWei(1000,"ether")})
user = eth.accounts[0]
eth.getBalance(user)
eth.sendTransaction({from:eth.accounts[4],to:eth.accounts[0],vale:web3.toWei(1000,"ether")})
eth.getBalance(user)
user = eth.accounts[1]
eth.sendTransaction({from:eth.accounts[4],to:eth.accounts[0],vale:web3.toWei(1000,"ether")})
user = eth.accounts[1]
user = eth.accounts[0]
miner.start()
user = eth.accounts[1]
person.unlockAccount(user)
user = eth.accounts[0]
miner.start()
user = eth.accounts[1]
user = eth.accounts[0]
user = eth.accounts[1]
user = eth.accounts[0]
person.unlockAccount(user)
user = eth.accounts[1]
miner.start()
user = eth.accounts[0]
miner.start()
user0 = eth.accounts[0]
user1 = eth.accounts[1]
eth.sendTranasaction({from:user0,to:user1,value:amount})
eth.sendTranasaction({from:user0,to:user1,value:0xfffffffffffffffffffff})
eth.sendTransaction({from:user0,to:user1,value:0xfffffffffffffffffffff})
eth.sendTransaction({from:user0,to:user1,value:0xffffffffffffffffff})
miner.start()
eth.getBalance(user0)
user0 = eth.accounts[0]
user1 = eth.accounts[1]
eth.getBalance(user0)
eth.getBalance(user1)
miner.start()
miner.stop()
eth.getBalance(user0)
eth.getBalance(user1)
eth.getBalance(user0)
eth.getBalance(user1)
user0 = eth.accounts[0]
user1 = eth.accounts[1]
eth.getBalance(user0)
eth.getBalance(user1)
miner.start()
miner.stop
miner.start()